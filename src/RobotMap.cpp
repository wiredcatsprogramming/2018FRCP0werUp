// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
#include "ctre/Phoenix.h"

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<WPI_TalonSRX> RobotMap::driveTrainDriverRightFront;
std::shared_ptr<WPI_TalonSRX> RobotMap::driveTrainDriverRightBack;
std::shared_ptr<frc::SpeedControllerGroup> RobotMap::driveTrainDriverRight;
std::shared_ptr<WPI_TalonSRX> RobotMap::driveTrainDriverLeftFront;
std::shared_ptr<WPI_TalonSRX> RobotMap::driveTrainDriverLeftBack;
std::shared_ptr<frc::SpeedControllerGroup> RobotMap::driveTrainDriverLeft;
std::shared_ptr<frc::RobotDrive> RobotMap::driveTrainSpeedControllers;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    frc::LiveWindow *lw = frc::LiveWindow::GetInstance();

    driveTrainDriverRightFront.reset(new WPI_TalonSRX(2));
    
    
    driveTrainDriverRightBack.reset(new WPI_TalonSRX(1));
    
    
    driveTrainDriverRight = std::make_shared<frc::SpeedControllerGroup>(*driveTrainDriverRightFront, *driveTrainDriverRightBack  );
    lw->AddActuator("DriveTrain", "DriverRight", driveTrainDriverRight);
    
    driveTrainDriverLeftFront.reset(new WPI_TalonSRX(4));
    
    
    driveTrainDriverLeftBack.reset(new WPI_TalonSRX(3));
    
    
    driveTrainDriverLeft = std::make_shared<frc::SpeedControllerGroup>(*driveTrainDriverLeftBack, *driveTrainDriverLeftFront  );
    lw->AddActuator("DriveTrain", "DriverLeft", driveTrainDriverLeft);
    
    driveTrainSpeedControllers.reset(new frc::RobotDrive(driveTrainDriverRight, driveTrainDriverLeft));
    
    driveTrainSpeedControllers->SetSafetyEnabled(true);
        driveTrainSpeedControllers->SetExpiration(0.1);
        driveTrainSpeedControllers->SetSensitivity(0.5);
        driveTrainSpeedControllers->SetMaxOutput(1.0);



    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
